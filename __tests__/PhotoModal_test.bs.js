// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var React = require("react");
var JestDom = require("bs-jest-dom/src/JestDom.bs.js");
var ReactTestingLibrary = require("bs-react-testing-library/src/ReactTestingLibrary.bs.js");
var PhotoModal$ReactHooksTemplate = require("../src/PhotoModal.bs.js");

Jest.describe("PhotoModal", (function (param) {
        var photo = /* record */[
          /* albumId */1,
          /* id */1,
          /* title */"This is the title",
          /* url */"foo1",
          /* thumbnailUrl */"foo2"
        ];
        var photos = /* :: */[
          photo,
          /* [] */0
        ];
        var onInputSubmit = (jest.fn());
        var setModalClosed = (jest.fn());
        Jest.test("renders the modal", (function (param) {
                var eta = React.createElement(PhotoModal$ReactHooksTemplate.make, {
                      photo: photo,
                      photos: photos,
                      setModalClosed: setModalClosed,
                      onInputSubmit: onInputSubmit
                    });
                return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](ReactTestingLibrary.render(undefined, undefined, eta).container));
              }));
        return Jest.test("title shows", (function (param) {
                      var partial_arg = /* `Str */[
                        4153489,
                        "This is the title"
                      ];
                      var eta = React.createElement(PhotoModal$ReactHooksTemplate.make, {
                            photo: photo,
                            photos: photos,
                            setModalClosed: setModalClosed,
                            onInputSubmit: onInputSubmit
                          });
                      return JestDom.toBeInTheDocument(Jest.Expect[/* expect */0]((function (eta) {
                                          var param = undefined;
                                          var param$1 = eta;
                                          return ReactTestingLibrary.getByText(partial_arg, param, param$1);
                                        })(ReactTestingLibrary.render(undefined, undefined, eta))));
                    }));
      }));

/*  Not a pure module */
