// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Jest from "@glennsl/bs-jest/src/jest.js";
import * as React from "react";
import * as JestDom from "bs-jest-dom/src/JestDom.bs.js";
import * as ReactTestingLibrary from "bs-react-testing-library/src/ReactTestingLibrary.bs.js";
import * as PhotoItem$ReasonImageGridExample from "../src/PhotoItem.bs.js";

Jest.describe("PhotoItem", (function (param) {
        var photo = {
          albumId: 1,
          id: 1,
          title: "This is the title",
          url: "foo1",
          thumbnailUrl: "foo2"
        };
        var photos = /* :: */[
          photo,
          /* [] */0
        ];
        var setModalOpen = (jest.fn());
        Jest.test("renders the item", (function (param) {
                return Jest.Expect.toMatchSnapshot(Jest.Expect.expect((function (eta) {
                                    return ReactTestingLibrary.render(undefined, undefined, eta);
                                  })(React.createElement(PhotoItem$ReasonImageGridExample.make, {
                                        photo: photo,
                                        photos: photos,
                                        setModalOpen: setModalOpen
                                      })).container));
              }));
        return Jest.test("sets the src on the image", (function (param) {
                      return JestDom.toHaveAttribute("src", "foo1", Jest.Expect.expect(ReactTestingLibrary.getByAltText("", (function (eta) {
                                              return ReactTestingLibrary.render(undefined, undefined, eta);
                                            })(React.createElement(PhotoItem$ReasonImageGridExample.make, {
                                                  photo: photo,
                                                  photos: photos,
                                                  setModalOpen: setModalOpen
                                                })))));
                    }));
      }));

export {
  
}
/*  Not a pure module */
