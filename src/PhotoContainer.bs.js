// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactUpdate = require("reason-react-update/src/ReactUpdate.bs.js");
var Utils$ReactHooksTemplate = require("./Utils.bs.js");
var Decoders$ReactHooksTemplate = require("./Decoders.bs.js");
var PhotoItem$ReactHooksTemplate = require("./PhotoItem.bs.js");
var PhotoModal$ReactHooksTemplate = require("./PhotoModal.bs.js");

var container = Css.style(/* :: */[
      Css.height(/* `percent */[
            -119887163,
            100.0
          ]),
      /* :: */[
        Css.width(/* `percent */[
              -119887163,
              100.0
            ]),
        /* :: */[
          Css.display(/* flex */-1010954439),
          /* :: */[
            Css.justifyContent(/* center */98248149),
            /* [] */0
          ]
        ]
      ]
    ]);

var photoContainer = Css.style(/* :: */[
      Css.display(/* flex */-1010954439),
      /* :: */[
        Css.flexWrap(/* wrap */-822134326),
        /* :: */[
          Css.maxWidth(/* `px */[
                25096,
                1000
              ]),
          /* [] */0
        ]
      ]
    ]);

var Styles = /* module */[
  /* container */container,
  /* photoContainer */photoContainer
];

function getPhotos(param) {
  return Utils$ReactHooksTemplate.fetchAndDecode("https://jsonplaceholder.typicode.com/photos", Decoders$ReactHooksTemplate.decodePhotos);
}

var API = /* module */[/* getPhotos */getPhotos];

function PhotoContainer(Props) {
  var match = ReactUpdate.useReducer(/* record */[
        /* photos : [] */0,
        /* modalOpen */false,
        /* modalId */0,
        /* loading */false
      ], (function (action, state) {
          if (typeof action === "number") {
            if (action === 0) {
              return /* UpdateWithSideEffects */Block.__(1, [
                        state,
                        (function (param) {
                            var send = param[/* send */0];
                            Curry._1(send, /* PhotosLoading */Block.__(0, [true]));
                            Utils$ReactHooksTemplate.fetchAndDecode("https://jsonplaceholder.typicode.com/photos", Decoders$ReactHooksTemplate.decodePhotos).then((function (photos) {
                                    var filteredPhotos = List.filter((function (photo) {
                                              return photo[/* id */1] < 26;
                                            }))(photos);
                                    return Promise.resolve(Curry._1(send, /* SetPhotos */Block.__(1, [filteredPhotos])));
                                  }));
                            Curry._1(send, /* PhotosLoading */Block.__(0, [false]));
                            return (function (param) {
                                      return /* () */0;
                                    });
                          })
                      ]);
            } else {
              return /* Update */Block.__(0, [/* record */[
                          /* photos */state[/* photos */0],
                          /* modalOpen */false,
                          /* modalId */state[/* modalId */2],
                          /* loading */state[/* loading */3]
                        ]]);
            }
          } else {
            switch (action.tag | 0) {
              case 0 : 
                  return /* Update */Block.__(0, [/* record */[
                              /* photos */state[/* photos */0],
                              /* modalOpen */state[/* modalOpen */1],
                              /* modalId */state[/* modalId */2],
                              /* loading */action[0]
                            ]]);
              case 1 : 
                  return /* Update */Block.__(0, [/* record */[
                              /* photos */action[0],
                              /* modalOpen */state[/* modalOpen */1],
                              /* modalId */state[/* modalId */2],
                              /* loading */state[/* loading */3]
                            ]]);
              case 2 : 
                  return /* Update */Block.__(0, [/* record */[
                              /* photos */state[/* photos */0],
                              /* modalOpen */true,
                              /* modalId */action[0],
                              /* loading */state[/* loading */3]
                            ]]);
              case 3 : 
                  var id = action[1];
                  var string = action[0];
                  return /* UpdateWithSideEffects */Block.__(1, [
                            state,
                            (function (param) {
                                localStorage.setItem("image" + id, string);
                                Curry._1(param[/* send */0], /* SetModalClosed */1);
                                return (function (param) {
                                          return /* () */0;
                                        });
                              })
                          ]);
              
            }
          }
        }));
  var send = match[1];
  var state = match[0];
  React.useEffect((function () {
          Curry._1(send, /* FetchPhotos */0);
          return undefined;
        }), ([]));
  var match$1 = state[/* loading */3];
  if (match$1) {
    return React.createElement("h1", undefined, "...Loading");
  } else {
    var match$2 = state[/* modalOpen */1];
    return React.createElement("div", {
                className: container
              }, React.createElement("div", {
                    className: photoContainer
                  }, match$2 ? React.createElement(PhotoModal$ReactHooksTemplate.make, {
                          photo: List.hd(List.filter((function (photo) {
                                        return photo[/* id */1] === state[/* modalId */2];
                                      }))(state[/* photos */0])),
                          setModalClosed: (function (param) {
                              return Curry._1(send, /* SetModalClosed */1);
                            }),
                          onInputSubmit: (function (value, id) {
                              return Curry._1(send, /* SetItemToLocalStorage */Block.__(3, [
                                            value,
                                            id
                                          ]));
                            })
                        }) : null, $$Array.of_list(List.map((function (item) {
                              return React.createElement(PhotoItem$ReactHooksTemplate.make, {
                                          id: item[/* id */1],
                                          title: item[/* title */2],
                                          thumbnailUrl: item[/* thumbnailUrl */4],
                                          url: item[/* url */3],
                                          setModalOpen: (function (param) {
                                              return Curry._1(send, /* SetModalOpen */Block.__(2, [item[/* id */1]]));
                                            })
                                        });
                            }), state[/* photos */0]))));
  }
}

var make = PhotoContainer;

exports.Styles = Styles;
exports.API = API;
exports.make = make;
/* container Not a pure module */
