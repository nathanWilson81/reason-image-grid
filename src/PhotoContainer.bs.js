// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReactUpdate = require("reason-react-update/src/ReactUpdate.bs.js");
var Utils$ReactHooksTemplate = require("./Utils.bs.js");
var Decoders$ReactHooksTemplate = require("./Decoders.bs.js");
var PhotoItem$ReactHooksTemplate = require("./PhotoItem.bs.js");
var PhotoModal$ReactHooksTemplate = require("./PhotoModal.bs.js");

var container = Css.style(/* :: */[
      Css.height(/* `percent */[
            -119887163,
            100.0
          ]),
      /* :: */[
        Css.width(/* `percent */[
              -119887163,
              100.0
            ]),
        /* :: */[
          Css.display(/* flex */-1010954439),
          /* :: */[
            Css.justifyContent(/* center */98248149),
            /* [] */0
          ]
        ]
      ]
    ]);

var photoContainer = Css.style(/* :: */[
      Css.display(/* flex */-1010954439),
      /* :: */[
        Css.flexWrap(/* wrap */-822134326),
        /* :: */[
          Css.maxWidth(/* `px */[
                25096,
                1000
              ]),
          /* [] */0
        ]
      ]
    ]);

var Styles = /* module */[
  /* container */container,
  /* photoContainer */photoContainer
];

function getPhotos(param) {
  return Utils$ReactHooksTemplate.fetchAndDecode("https://jsonplaceholder.typicode.com/photos", Decoders$ReactHooksTemplate.decodePhotos);
}

var API = /* module */[/* getPhotos */getPhotos];

function PhotoContainer(Props) {
  var match = ReactUpdate.useReducer(/* record */[/* visualState : Loading */0], (function (action, state) {
          if (typeof action === "number") {
            return /* UpdateWithSideEffects */Block.__(1, [
                      state,
                      (function (param) {
                          var send = param[/* send */0];
                          Utils$ReactHooksTemplate.fetchAndDecode("https://jsonplaceholder.typicode.com/photos", Decoders$ReactHooksTemplate.decodePhotos).then((function (photos) {
                                  var filteredPhotos = List.filter((function (photo) {
                                            return photo[/* id */1] < 26;
                                          }))(photos);
                                  return Promise.resolve(Curry._1(send, /* SetVisualState */Block.__(2, [/* Loaded */Block.__(0, [filteredPhotos])])));
                                }));
                          return (function (param) {
                                    return /* () */0;
                                  });
                        })
                    ]);
          } else {
            switch (action.tag | 0) {
              case 0 : 
                  return /* Update */Block.__(0, [/* record */[/* visualState : Modal */Block.__(2, [
                                  action[0],
                                  action[1]
                                ])]]);
              case 1 : 
                  return /* Update */Block.__(0, [/* record */[/* visualState : Loaded */Block.__(0, [action[0]])]]);
              case 2 : 
                  return /* Update */Block.__(0, [/* record */[/* visualState */action[0]]]);
              case 3 : 
                  var id = action[1];
                  var string = action[0];
                  return /* UpdateWithSideEffects */Block.__(1, [
                            state,
                            (function (param) {
                                localStorage.setItem("image" + id, string);
                                return (function (param) {
                                          return /* () */0;
                                        });
                              })
                          ]);
              
            }
          }
        }));
  var send = match[1];
  React.useEffect((function () {
          Curry._1(send, /* FetchPhotos */0);
          return undefined;
        }), ([]));
  var match$1 = match[0][/* visualState */0];
  if (typeof match$1 === "number") {
    return React.createElement("h1", undefined, "...Loading");
  } else {
    switch (match$1.tag | 0) {
      case 0 : 
          var photos = match$1[0];
          return React.createElement("div", {
                      className: container
                    }, React.createElement("div", {
                          className: photoContainer
                        }, $$Array.of_list(List.map((function (item) {
                                    return React.createElement(PhotoItem$ReactHooksTemplate.make, {
                                                photo: item,
                                                photos: photos,
                                                setModalOpen: (function (photo, photos) {
                                                    return Curry._1(send, /* SetModalOpen */Block.__(0, [
                                                                  photo,
                                                                  photos
                                                                ]));
                                                  }),
                                                key: String(item[/* id */1])
                                              });
                                  }), photos))));
      case 1 : 
          return React.createElement("h1", undefined, "Uh oh: " + match$1[0]);
      case 2 : 
          return React.createElement(PhotoModal$ReactHooksTemplate.make, {
                      photo: match$1[0],
                      photos: match$1[1],
                      setModalClosed: (function (photos) {
                          return Curry._1(send, /* SetModalClosed */Block.__(1, [photos]));
                        }),
                      onInputSubmit: (function (value, id) {
                          return Curry._1(send, /* SetItemToLocalStorage */Block.__(3, [
                                        value,
                                        id
                                      ]));
                        })
                    });
      
    }
  }
}

var make = PhotoContainer;

exports.Styles = Styles;
exports.API = API;
exports.make = make;
/* container Not a pure module */
