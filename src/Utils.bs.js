// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as $$Promise from "reason-promise/src/js/promise.js";
import * as Belt_Result from "bs-platform/lib/es6/belt_Result.js";

var $$Promise$1 = {
  pending: $$Promise.pending,
  resolved: $$Promise.resolved,
  exec: $$Promise.exec,
  get: $$Promise.get,
  tap: $$Promise.tap,
  map: $$Promise.map,
  flatMap: $$Promise.flatMap,
  getOk: $$Promise.getOk,
  tapOk: $$Promise.tapOk,
  mapOk: $$Promise.mapOk,
  flatMapOk: $$Promise.flatMapOk,
  getError: $$Promise.getError,
  tapError: $$Promise.tapError,
  mapError: $$Promise.mapError,
  flatMapError: $$Promise.flatMapError,
  Operators: $$Promise.Operators,
  getSome: $$Promise.getSome,
  tapSome: $$Promise.tapSome,
  mapSome: $$Promise.mapSome,
  flatMapSome: $$Promise.flatMapSome,
  race: $$Promise.race,
  all: $$Promise.all,
  allArray: $$Promise.allArray,
  all2: $$Promise.all2,
  all3: $$Promise.all3,
  all4: $$Promise.all4,
  all5: $$Promise.all5,
  all6: $$Promise.all6,
  Js: $$Promise.Js,
  PipeFirst: $$Promise.PipeFirst,
  onUnhandledException: $$Promise.onUnhandledException,
  let_: $$Promise.flatMap
};

function fetchAndDecode(url, decodeFn) {
  return $$Promise.flatMap(fetch(url), (function (result) {
                return $$Promise.flatMap(result.json(), (function (jsonResult) {
                              return $$Promise.resolved(Belt_Result.getExn(Curry._1(decodeFn, jsonResult)));
                            }));
              }));
}

export {
  $$Promise$1 as $$Promise,
  fetchAndDecode ,
  
}
/* Promise Not a pure module */
